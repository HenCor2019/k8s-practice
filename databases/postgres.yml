# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   name: postgres-deployment
#   labels:
#     name: postgres-deployment
#     app: demo-voting-app
# spec:
#   replicas: 1
#   selector:
#     matchLabels:
#       name: postgres
#       app: demo-voting-app
#   template:
#     metadata:
#       labels:
#         name: postgres
#         app: demo-voting-app
#     spec:
#       containers:
#       - name: postgres
#         image: postgres:9.4
#         ports:
#         - containerPort: 5432
#         env:
#           - name: POSTGRES_USER
#             value: "postgres"
#           - name: POSTGRES_PASSWORD
#             value: "postgres"
# ---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    name: postgres
    app: demo-voting-app
  ports:
  - port: 5432
    targetPort: 5432
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
  - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  serviceName: db
  replicas: 1
  selector:
    matchLabels:
      name: postgres
      app: demo-voting-app
  template:
    metadata:
      labels:
        name: postgres
        app: demo-voting-app
    spec:
      containers:
      - name: postgres
        image: postgres:9.4
        ports:
        - containerPort: 5432
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: database-secret
                key: db_username
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: database-secret
                key: db_password
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: postgres-pvc
  volumeClaimTemplates:
  - metadata:
      name: postgres-pvc
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
